#server.port={cipher}{key:config-service-key}AQATDs3vjU3SVDkQg7GFyiUDeMXzafIXtN5VhNkAayv59PMMHXzW+6HqO4LJnk/5Z6iE6fCpBHHX9QWL8DdjluCAzbxgjeIZiMzaGfpO57V4u4sbSzPP2RIv0CA4ouXToyQogcO3gps4gZyKV/kjyJEzta+UkxPQ70f1gn+sAsdUn+jSnUyNzcalpmjrNHn6uyA4LoCtD+ZMi5T6r2AnSCNNTyX72VHoKRj842MjXlvmozUG8QhH1WtqQLARh5Wn3Ylso3IRQAFtEXR/ww/nyAyeZXYyIfPyCbphjDd+RSkMYnY4aNqS4xixnkA/eybetOoYv5Nh/miTaOeWV5EkETJeYus2EgXLhN0QcXkvtiH67UV0WJmAoCKUg4O0TUfJbuw=
#
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#
##actuator endpoint
#management.endpoints.web.exposure.include=*
#
##indicates the frequency the client sends heartbeat to server to indicate that it is alive.
#eureka.instance.lease-renewal-interval-in-seconds=30
#
#eureka.client.serviceUrl.defaultZone={cipher}{key:config-service-key}AQAYrQ2Gxv9oYBil/+coy9rKRx2gPFlFd/ggdLiskLD9qzXn3tgs0xYG65j0bGhUxz1nwej1e9ioHb654xChBc1J/7P+zEL5PhnEuGiKag0mNwK6rmUp2rl1MjIjUIK2u5nE4jrgVwdXkBF8Z0XB2fIVGFL6S/AhlDzdMlEx8jMm4GL47jzlWqqVxbBsPBNqTCcgU09XClcB4/jDJNE6F+0jADbtCyD7nelU8G96prU4eDIJI0URYGBeK9VOy0j8CUFl/Rl+PbxvdMotxTO2elgSWP/1CE/atz4l2YG4AoYHPmQuEseqjQqZfct0ge6eqbL7ZhP6r9jffwjkO7Hy+qtkrJb6LJ5iXfBDrbDJ4nBa07qBTSIPRKJy/Bhqd9u+2KRijlErPcMWNeI1LgCcbjDS
server.port=8300

spring.cloud.gateway.routes[0].id=weatherModule
spring.cloud.gateway.routes[0].uri=lb://search
spring.cloud.gateway.routes[0].predicates[0]=Path=/weather/**

spring.cloud.gateway.routes[1].id=detailsModule
spring.cloud.gateway.routes[1].uri=lb://details
spring.cloud.gateway.routes[1].predicates[0]=Path=/details/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[2].id=SpringOneModule
spring.cloud.gateway.routes[2].uri=lb://SpringOne
spring.cloud.gateway.routes[2].predicates[0]=Path=/universities/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.discovery.locator.enabled=true

myservice.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.client.registryFetchIntervalSeconds=xx
#ribbon.ServerListRefreshInterval

#actuator endpoint
management.endpoints.web.exposure.include=*

#indicates the frequency the client sends heartbeat to server to indicate that it is alive.
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/